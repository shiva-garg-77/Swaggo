# üîí Swaggo API Server Configuration
# Security-hardened reverse proxy for Swaggo backend API

# Upstream configuration for API server
upstream swaggo_api {
    least_conn;
    server api:45799 max_fails=3 fail_timeout=30s;
    # Add more servers for load balancing if needed
    # server api2:45799 max_fails=3 fail_timeout=30s backup;
    
    # Health check
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Upstream for Data Science server
upstream swaggo_ds {
    server data-science:5000 max_fails=3 fail_timeout=30s;
    keepalive 16;
}

# ==================================================
# üîê HTTPS SERVER (Production)
# ==================================================

server {
    listen 8443 ssl http2;
    server_name api.swaggo.com localhost;
    
    # ==================================================
    # üõ°Ô∏è SSL/TLS CONFIGURATION
    # ==================================================
    
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    # SSL security settings (inherited from main config)
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # ==================================================
    # üõ°Ô∏è SECURITY HEADERS
    # ==================================================
    
    # Additional security headers for API
    add_header X-API-Version "1.0" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header Expires "0" always;
    
    # ==================================================
    # üìä LOGGING
    # ==================================================
    
    access_log /var/log/nginx/api-access.log security_log;
    error_log /var/log/nginx/api-error.log warn;
    
    # ==================================================
    # üöÄ API PROXY CONFIGURATION
    # ==================================================
    
    # Health check endpoint (no rate limiting)
    location /health {
        limit_req zone=global burst=10 nodelay;
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
        
        # Health check specific settings
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # Authentication endpoints (strict rate limiting)
    location ~ ^/api/(auth|login|register|password) {
        limit_req zone=auth burst=3 nodelay;
        limit_req zone=global burst=10 nodelay;
        
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
        
        # Longer timeout for auth operations
        proxy_read_timeout 30s;
        proxy_send_timeout 30s;
    }
    
    # File upload endpoints (upload rate limiting)
    location ~ ^/api/(upload|files) {
        limit_req zone=upload burst=2 nodelay;
        limit_req zone=global burst=10 nodelay;
        
        # Increased body size for uploads
        client_max_body_size 100M;
        client_body_timeout 300s;
        
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
        
        # Extended timeouts for uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # WebSocket connections for real-time features
    location /socket.io/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://swaggo_api;
        include /etc/nginx/websocket_params.conf;
    }
    
    # Data Science API proxy
    location /api/ds/ {
        limit_req zone=api burst=10 nodelay;
        
        # Rewrite URL to remove /api/ds prefix
        rewrite ^/api/ds/(.*) /api/$1 break;
        
        proxy_pass http://swaggo_ds;
        include /etc/nginx/proxy_params.conf;
        
        # Extended timeout for ML operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 120s;
        proxy_read_timeout 300s;
    }
    
    # GraphQL endpoint
    location /graphql {
        limit_req zone=api burst=15 nodelay;
        
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
        
        # GraphQL specific settings
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }
    
    # General API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        limit_req zone=global burst=50 nodelay;
        
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
    }
    
    # Static files (if served by API)
    location ~ ^/(uploads|assets|static)/ {
        limit_req zone=global burst=100 nodelay;
        
        # Cache static files
        expires 1h;
        add_header Cache-Control "public, immutable";
        
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
    }
    
    # ==================================================
    # üö´ SECURITY RESTRICTIONS
    # ==================================================
    
    # Block access to sensitive files
    location ~ /\.(env|git|svn|htaccess|htpasswd) {
        deny all;
        return 404;
    }
    
    # Block access to backup and temporary files
    location ~ \.(bak|backup|swp|tmp|temp)$ {
        deny all;
        return 404;
    }
    
    # Block access to configuration files
    location ~ \.(conf|config|ini|log)$ {
        deny all;
        return 404;
    }
    
    # Default location - deny all other requests
    location / {
        return 404;
    }
}

# ==================================================
# üåê HTTP SERVER (Redirect to HTTPS)
# ==================================================

server {
    listen 8080;
    server_name api.swaggo.com localhost;
    
    # Security headers for HTTP redirect
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    
    # Log HTTP requests
    access_log /var/log/nginx/api-http-access.log security_log;
    
    # Health check endpoint (allow HTTP for internal checks)
    location /health {
        limit_req zone=global burst=10 nodelay;
        proxy_pass http://swaggo_api;
        include /etc/nginx/proxy_params.conf;
    }
    
    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name:8443$request_uri;
    }
}